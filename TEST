#!/usr/bin/perl -s
# $Header: /appl/fitbatch/scripts/RCS/getcred.pl,v 1.1 2012/10/25 15:20:53 ar69784 Exp $
# Get credentials for use in authenticating client tasks to services.
# See show_help() below for more information.
# Proprietary and confidential information of The Hartford.
# $Log: getcred.pl,v $
# Revision 1.1  2012/10/25 15:20:53  ar69784
# Initial revision
#
use Env;             # Get environment variables.
use localapp;        # std local settings and routines.
use Sys::Hostname;   # Module to get the hostname.

( our $ver = q($Revision: 1.1 $)) =~ s/\$Rev\w+: (\d+\.\d+) \$$/v$1/o;
  our ( $help, $h ); # optional flags provided at runtime via interpreter -s flag above.

show_help(0) if $h or $help;  # flags received via the perl -s switch above.

if ( @ARGV == 2 ){
   our ( $server, $ID, $PW ) = @ARGV; 
}else{
    print "($this $ver): Incorrect number of arguments were given.\n";
    show_help(1);  # and quit.
}
my ( $id,$pw ) = get_login_string( $server, $HOME, $ID ) unless $PW;
$id ||= $ID;
$pw ||= $PW;

if ( $id and $pw ){
    print qq($id/$pw);
}else{
    die qq(($this $ver): Credentials for "$server" and "$ID" not found);
}
exit 0;

#------------------------------------------------------------------------------

sub show_help {

    my $retcode = shift;
    my $header = '-' x 25 . " $this $ver " . '-' x 25;
    my $lines  = '-' x length $header;

     ( $help = <<"     USAGE" ) =~ s/^\s+//gm;
         $lines
         $header
         $lines
         Gets login credentials for a script to sign in to a service.
         Credentials returned are a single string in the form: "id/pw"
         .
         Usage: $this [-h or -help] "Server" "ID"
         .      where -help or -h displays this note.
         .        and "Server" is a hostname or an oracle instance.
         .            An Oracle instance must supplied in the form "SID:instance"
         .            where "SID:" is a constant.
         .        and "ID" is the desired account to use.
     USAGE
     print "$help\n";

     exit $retcode;  # Quit program and send back a return code to the shell.
}
__END__
