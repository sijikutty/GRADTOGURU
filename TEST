import cx_Oracle

def connect_to_oracle_db(secretID):
    db_secrets = get_DBsecrets(secretID)

    try:
        print("Connecting to DB")
        connection = cx_Oracle.connect(user=db_secrets['username'],
                                       password=db_secrets['password'],
                                       dsn=f"{db_secrets['host']}:{db_secrets['port']}/{db_secrets['servicename']}")
        
        print("Database connected successfully")
        return connection

    except Exception as e:
        print(f"Error connecting to Oracle DB: {e}")
        return None

def execute_query(connection, query):
    try:
        cursor = connection.cursor()
        cursor.execute(query)
        result = cursor.fetchone()
        
        count = result[0] if result else None
        
        print(f"Result of the query: {count}")
        
        cursor.close()
        return {"status": True, "count": count}

    except Exception as e:
        print(f"Error executing query: {e}")
        return {"status": False, "error": str(e)}
    finally:
        if connection:
            connection.close()

# Example usage in main or another function
def main():
    secretID = "your_secret_id"
    query = "SELECT COUNT(*) FROM PS_JRNL_HEADER WHERE SOURCE = 'MAX'"

    # Connect to Oracle DB
    connection = connect_to_oracle_db(secretID)
    
    if connection:
        # Execute query
        query_result = execute_query(connection, query)

        # Check query execution status
        if query_result["status"]:
            print(f"Query executed successfully. Count: {query_result['count']}")
        else:
            print(f"Failed to execute query. Error: {query_result['error']}")
    else:
        print("Failed to connect to the database.")

if __name__ == "__main__":
    main()
