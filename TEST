from automation_utils import get_testdata
import win32com.client
import pytest
import psutil
import time

@pytest.mark.parametrize("testcase", get_testdata("test_fah_concurrent"))
def test_FAH_Concurrent(testcase):
    # Close any existing instances of UFT
    for process in psutil.process_iter():
        if process.name() == "UFT.exe":
            process.terminate()

    testdata = testcase["testdata"]
    test_path = testdata["test_path"]
    fah_url = testdata["fah_url"]
    fahReport = testdata["fahReport"]
    fahSource = testdata["fahSource"]
    fahRequestid = testdata["fahRequestid"]

    try:
        # Create an instance of UFT
        uft = win32com.client.Dispatch("QuickTest.Application")

        # Start UFT
        uft.Launch()

        # Make the UFT window visible
        uft.Visible = True

        # Open a test
        uft.Open(test_path)

        # Create a RunResultsOptions object
        uftResultsOpt = win32com.client.Dispatch("QuickTest.RunResultsOptions")

        # Save the changes
        uft.Test.Save()

        # Run the test with parameters
        uft.Test.Run(uftResultsOpt, True)

        # Close the test
        uft.Test.Close()

        # Quit UFT
        uft.Quit()

        print("Script execution success!")

    except AssertionError:
        raise Exception("Script execution failed.")

