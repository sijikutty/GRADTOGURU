import paramiko

# SSH connection details
hostname = 'example.com'
username = 'your_username'
password = 'your_password'

# Function to recursively print folders and subfolders
def print_folders(sftp, current_directory, indentation=""):
    try:
        # Change directory to the current directory
        sftp.chdir(current_directory)

        # List all items (files and directories) in the current directory
        items = sftp.listdir()

        for item in items:
            # Check if the item is a directory
            try:
                sftp.chdir(f"{current_directory}/{item}")
                print(f"{indentation}{item}/")  # Print folder name with indentation

                # Recursively print subfolders
                print_folders(sftp, f"{current_directory}/{item}", indentation + "    ")

            except IOError:
                # IOError will be raised if it's not a directory or if permission is denied
                pass

    except IOError:
        # IOError will be raised if directory doesn't exist or permission is denied
        pass

    except Exception as e:
        print(f"Error listing folder {current_directory}: {str(e)}")

# Create an SSH client instance
ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

try:
    # Connect to the SSH server using password authentication
    ssh_client.connect(hostname=hostname, username=username, password=password)

    # Open an SFTP session on the SSH connection
    sftp = ssh_client.open_sftp()

    # Print all folders and subfolders starting from root directory ("/")
    print(f"Listing all folders and subfolders in {hostname}:")
    print_folders(sftp, "/")

finally:
    # Close the SFTP session and SSH connection
    if ssh_client:
        ssh_client.close()
