import os
import json

def save_credentials(testdata):
    # Function to retrieve secrets based on testdata
    def get_secrets(secret_id):
        # Replace this with your actual implementation of retrieving secrets
        # For demonstration, returning dummy data
        if secret_id == "fahsecretID":
            return {'User': 'fahuser', 'Password': 'fahpassword'}
        elif secret_id == "pssecretID":
            return {'User': 'psuser', 'Password': 'pspassword'}
        else:
            return None

    # Credentials retrieval
    credentials = {}

    # Example: If testdata has fahsecretID, retrieve Fah credentials
    if "fahsecretID" in testdata:
        fahsecrets = get_secrets(testdata["fahsecretID"])
        credentials["fahuser"] = {
            "fahusername": fahsecrets['User'],
            "fahpassword": fahsecrets['Password']
        }

    # Example: If testdata has pssecretID, retrieve PS credentials
    if "pssecretID" in testdata:
        pssecrets = get_secrets(testdata["pssecretID"])
        credentials["psuser"] = {
            "psusername": pssecrets['User'],
            "pspassword": pssecrets['Password']
        }

    # Directory where JSON file will be located
    directory = os.path.expanduser('~')  # Example: current user's home directory

    # Ensure the directory exists, create if not
    os.makedirs(os.path.join(directory, '.secret'), exist_ok=True)

    # Path to the JSON file
    cred_json_file_path = os.path.join(directory, '.secret', 'credentials.json')

    # Save credentials to JSON file
    with open(cred_json_file_path, 'w') as f:
        json.dump(credentials, f, indent=4)

    print(f"Credentials saved to {cred_json_file_path}")
-------
# Credentials retrieval and saving to JSON file
testdata1 = {
    "fahsecretID": "some_fah_secret_id",
    "pssecretID": "some_ps_secret_id"
}
save_credentials(testdata1)
--------
# Credentials retrieval and saving to JSON file
testdata2 = {
    "fahsecretID": "some_fah_secret_id"
}
save_credentials(testdata2)
