# 18
try:
    # Navigate to PS/nVision Schedule Requests
    navigate_menu(page=page,
                  menu_sequence=["Reporting Tools", 
                                 "PS/nVision", 
                                 "PS/nVision Schedule Requests"])   
    
    # Locate the target iframe for the form
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    
    # Assertions for visibility of elements
    expect(targetContentFrame.get_by_label("Business Unit")).to_be_visible()
    expect(targetContentFrame.get_by_label("Report ID")).to_be_visible()
    expect(targetContentFrame.get_by_label("Description")).to_be_visible()
    expect(targetContentFrame.get_by_role("button", name="Search", exact=True)).to_be_visible()

    # Print confirmation message
    print("PS/nVision Schedule Requests page is accessible")
except Exception as e:
    raise Exception(f"PS/nVision Schedule Requests page cannot be navigated : {str(e)}")

try:
    # Navigate to PS/nVision Scope Definitions
    navigate_menu(page=page,
                  menu_sequence=["Reporting Tools", 
                                 "PS/nVision", 
                                 "PS/nVision Scope Definitions"])   
    
    # Locate the target iframe for the form
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    
    # Assertions for visibility of elements
    expect(targetContentFrame.get_by_label("SetID")).to_be_visible()
    expect(targetContentFrame.get_by_label("Report Scope")).to_be_visible()
    expect(targetContentFrame.get_by_role("button", name="Search", exact=True)).to_be_visible()

    # Print confirmation message
    print("PS/nVision Scope Definitions page is accessible")
except Exception as e:
    raise Exception(f"PS/nVision Scope Definitions page cannot be navigated : {str(e)}")

# 19
try:
    # Navigate to Tree Manager -> Tree Manager
    navigate_menu(page=page,
                  menu_sequence=["Tree Manager", 
                                 "Tree Manager"])   
    
    # Locate the target iframe for the form
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    
    # Assertions for visibility of elements
    expect(targetContentFrame.locator("#PSTREEDEFVW_TREE_NAME")).to_be_visible()
    expect(targetContentFrame.get_by_role("button", name="Search", exact=True)).to_be_visible()

    # Print confirmation message
    print("Tree Manager page is accessible")
except Exception as e:
    raise Exception(f"Tree Manager page cannot be navigated : {str(e)}")

try:
    # Navigate to Tree Manager -> Tree Auditor
    navigate_menu(page=page,
                  menu_sequence=["Tree Manager", 
                                 "Tree Auditor"])   
    
    # Locate the target iframe for the form
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    
    # Assertions for visibility of elements
    expect(targetContentFrame.locator("#RUN_TREE_AUDVW_RUN_CNTL_ID")).to_be_visible()
    expect(targetContentFrame.get_by_role("button", name="Search", exact=True)).to_be_visible()

    # Print confirmation message
    print("Tree Auditor page is accessible")
except Exception as e:
    raise Exception(f"Tree Auditor page cannot be navigated : {str(e)}")

# 20
try:
    # Navigate to Tree Manager -> Tree Utilities -> Copy/Delete Trees
    navigate_menu(page=page,
                  menu_sequence=["Tree Manager", 
                                 "Tree Utilities",
                                 "Copy/Delete Trees"])   
    
    # Locate the target iframe for the form
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    
    # Assertions for visibility of elements
    expect(targetContentFrame.get_by_role("tab", name="Tree Maintenance")).to_be_visible()
    expect(targetContentFrame.locator("[id=\"win0divPSTREEMAINTWRK_SETCNTRLVALUE\\$0\"]")).to_be_visible()
    expect(targetContentFrame.locator("[id=\"win0divPSTREEDEFMVW_TREE_NAME\\$0\"]")).to_be_visible()
    expect(targetContentFrame.locator("[id=\"win0divPSTREEDEFMVW_EFFDT\\$0\"]")).to_be_visible()
    expect(targetContentFrame.locator("[id=\"win0divPSTREEDEFMVW_VALID_TREE\\$0\"]")).to_be_visible()
    expect(targetContentFrame.locator("[id=\"win0divPSTREEDEFMVW_SETCNTRL_IND\\$0\"]")).to_be_visible()

    # Print confirmation message
    print("Copy/Delete Trees page is accessible")
except Exception as e:
    raise Exception(f"Copy/Delete Trees page cannot be navigated : {str(e)}")

try:
    # Navigate to Tree Manager -> Tree Utilities -> Export Trees
    navigate_menu(page=page,
                  menu_sequence=["Tree Manager", 
                                 "Tree Utilities",
                                 "Export Trees"])   
    
    # Locate the target iframe for the form
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    
    # Assertions for visibility of elements
    expect(targetContentFrame.locator("#RUN_TREEMOVER_RUN_CNTL_ID")).to_be_visible()
    expect(targetContentFrame.get_by_role("cell", name="Search", exact=True).locator("a")).to_be_visible()

    # Print confirmation message
    print("Export Trees page is accessible")
except Exception as e:
    raise Exception(f"Export Trees page cannot be navigated : {str(e)}")

try:
    # Navigate to Tree Manager -> Tree Utilities -> Import Trees
    navigate_menu(page=page,
                  menu_sequence=["Tree Manager", 
                                 "Tree Utilities",
                                 "Import Trees"])   
    
    # Locate the target iframe for the form
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    
    # Assertions for visibility of elements
    expect(targetContentFrame.locator("#RUN_TREEMOVER_RUN_CNTL_ID")).to_be_visible()
    expect(targetContentFrame.get_by_role("cell", name="Search", exact=True).locator("a")).to_be_visible()

    # Print confirmation message
    print("Import Trees page is accessible")
except Exception as e:
    raise Exception(f"Import Trees page cannot be navigated : {str(e)}")
