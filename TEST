from playwright.sync_api import Page
from automation_utils import get_testdata
from ps_utils import navigate_menu
import pytest 

@pytest.mark.dependency(name="test_manual_jrnl_create")
@pytest.mark.parametrize("testcase", get_testdata("test_manual_jrnl_create"))
def test_manual_jrnl_create(page:Page, set_test_dependency, testcase):

    testdata = testcase["testdata"]

    # Choosing create journal option from NavBar
    navigate_menu(page=page,
                  menu_sequence=["General Ledger", 
                                 "Journals", 
                                 "Journal Entry", 
                                 "Create/Update Journal Entries"])
    
    # Filling add new value Page
    #!---------------
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    targetContentFrame.get_by_role("button", name="Look up Business Unit").click()

    # Assigning Popup window frame with generalised locator to popup_dialog handle
    popup_dialog = page.frame_locator("[id^='ptModFrame']") # This handle can be used for all the pop-up windows
    
    popup_dialog.get_by_role("link", name=(testdata['business_unit'])).click()
    targetContentFrame.get_by_role("button", name="Add").click()
    #----------------!
    
    # Filling Header Page
    #!----------------
    targetContentFrame.get_by_label("Long Description").fill("test")

    targetContentFrame.get_by_role("button", name="Look up Ledger Group").click()
    popup_dialog.get_by_role("link", name=(testdata['ledger']), exact=True).click()

    targetContentFrame.get_by_role("button", name="Look up Source").click()
    popup_dialog.get_by_role("link", name=(testdata['source'])).click()

    #----------------!


    # Filling Lines Page
    #!----------------
    targetContentFrame.get_by_label("Lines", exact=True).click()

    # Assigning 1st lines to a handle line1
    line1 = targetContentFrame.locator("[id^='tr'][id$='row1']")

    # Referencing all the elements in the 1st line using line1 handle
    line1.get_by_role("button", name="Look Up Account").click()
    popup_dialog.get_by_role("link", name=(testdata['account'])).click()

    line1.get_by_role("button", name="Look up Oper Unit").click()
    popup_dialog.get_by_role("link", name="000").click()

    line1.locator("[id^='FOREIGN_AMOUNT']").fill(testdata['foreign_amount_line1'])
    
    # Creating second line
    targetContentFrame.get_by_role("link", name="Insert Lines").click()

    # Assigning 2nd lines to a handle line2
    line2 = targetContentFrame.locator("[id^='tr'][id$='row2']")

    line2.get_by_role("button", name="Look Up Account").click()
    popup_dialog.get_by_role("link", name=(testdata['account'])).click()

    line2.get_by_role("button", name="Look up Oper Unit").click()
    popup_dialog.get_by_role("link", name=(testdata['oper_unit'])).click()

    line2.locator("[id^='FOREIGN_AMOUNT']").fill(testdata['foreign_amount_line2'])

    #----------------!

    targetContentFrame.get_by_role("button", name="Save").click()

    alertmsg = page.locator("[id^='ptModTable']")
    alertmsg.get_by_role("button", name="OK").click()

    journal_id = targetContentFrame.locator("[id='JRNL_HEADER_JOURNAL_ID']").inner_text()

    #targetContentFrame.get_by_label("Process").select_option(value="E")
    #targetContentFrame.get_by_role("button", name="Process").click()
    #page.get_by_role("button", name="Yes").click()

    print("Journal ID : ", journal_id)
    Status=targetContentFrame.locator("[id=\"trJRNL_HEADER_IU\\$0_row1\"]").inner_text(timeout=10000)
    print("Status : ", Status)


# This test depends on the successful execution of 'test_nvision_reportbook' test
@pytest.mark.dependency(depends = ["test_manual_jrnl_create"])

@pytest.mark.parametrize("testcase", get_testdata("test_manual_jrnl_edit"))
def test_manual_jrnl_edit(page:Page,set_test_dependency, testcase):

    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    targetContentFrame.get_by_label("Process").select_option(value="E")
    targetContentFrame.get_by_role("button", name="Process").click()
    page.get_by_role("button", name="Yes").click()


    Status=targetContentFrame.locator("[id=\"trJRNL_HEADER_IU\\$0_row1\"]").inner_text(timeout=10000)
    print("Status : ", Status)


# This test depends on the successful execution of 'test_nvision_reportbook' test
#@pytest.mark.dependency(depends = ["test_manual_jrnl_edit"])
#
#@pytest.mark.parametrize("testcase", get_testdata("test_manual_jrnl_post"))
#def test_manual_jrnl_post(page:Page):
#
#    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
#    targetContentFrame.get_by_label("Process").select_option(value="P")
#    targetContentFrame.get_by_role("button", name="Process").click()
#    page.get_by_role("button", name="Yes").click()
