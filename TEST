from playwright.sync_api import Page
from automation_utils import get_testdata, get_secrets,update_remote_file,transfer_file_to_unix,autosys_login,autosys_job_run,connect_to_oracleDB,execute_query
from ps_utils import navigate_menu,add_run_control_id,schedule_process, monitor_process
import pytest 
import time

@pytest.mark.parametrize("testcase", get_testdata("test_CF_Security_process"))
def test_CF_Security_process(page:Page,  testcase):
    testdata = testcase["testdata"] 
      
    # Choosing create journal option from NavBar
    navigate_menu(page=page,
                  menu_sequence=["Set Up Financials/Supply Chain", 
                                 "Security", 
                                 "Chartfield Security", 
                                 "Maintain Security Rules",
                                 "Request CF Security Build"])
    add_run_control_id(page=page, run_ctrl_id=testdata['run_control_id'])
    targetContentFrame = page.frame_locator("iframe[name=\"TargetContent\"]")
    targetContentFrame.locator("[id=\"SEC_BUILD_REQ_PROCESS_FREQUENCY\\$0\"]").select_option(testdata['processfrequency'])
    targetContentFrame.locator("[id=\"SEC_BUILD_REQ_SEC_PROCESS_TYPE\\$0\"]").select_option(testdata['processtype'])
    targetContentFrame.locator("[id=\"SEC_BUILD_REQ_DATE_REQ_OPTION2\\$0\"]").select_option(testdata['reqdtoptn'])
    targetContentFrame.locator("[id=\"SEC_BUILD_REQ_CF_SECURITY2\\$0\"]").select_option(testdata['security_method'])
    targetContentFrame.get_by_role("button", name="Save").click()
    targetContentFrame.get_by_role("button", name="Run").click()
    process_instance_id = schedule_process(page=page, server_name=testdata["server"],process_name=testdata["cfsecurityprocess"])

    run_status = monitor_process(page=page, process_inst_id=process_instance_id, server=testdata["server"])

    print(f"CF Security Program Run status : ", run_status)


