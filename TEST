import paramiko

# SSH connection details
hostname = 'example.com'
username = 'your_username'
password = 'your_password'
target_directory = '/fit/data/in'  # Replace with the directory you want to search

# Function to list subdirectories recursively
def list_subdirectories_recursive(ssh_client, directory):
    try:
        sftp = ssh_client.open_sftp()
        dir_list = sftp.listdir_attr(directory)

        subdirectories = []

        for item in dir_list:
            if stat.S_ISDIR(item.st_mode):
                subdirectories.append(item.filename)
                subdirectories.extend(list_subdirectories_recursive(ssh_client, f"{directory}/{item.filename}"))

        return subdirectories

    except FileNotFoundError:
        return []

    except Exception as e:
        print(f"Error listing directories in {directory}: {str(e)}")
        return []

# Create an SSH client instance
ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

try:
    # Connect to the SSH server using password authentication
    ssh_client.connect(hostname=hostname, username=username, password=password)

    # List subdirectories recursively starting from the target directory
    subdirectories = list_subdirectories_recursive(ssh_client, target_directory)
    
    if subdirectories:
        print(f"Subdirectories in '{target_directory}':")
        for subdir in subdirectories:
            print(subdir)
    else:
        print(f"No subdirectories found in '{target_directory}'.")

finally:
    # Close the SSH connection
    ssh_client.close()
