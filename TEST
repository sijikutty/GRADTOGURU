import paramiko

def read_local_file(local_file_path):
    try:
        with open(local_file_path, 'r') as file:
            content = file.read()
        return content
    except Exception as e:
        print(f"Failed to read local file {local_file_path}: {str(e)}")
        return None

def write_to_remote_file(ssh_client, remote_file_path, content):
    try:
        sftp = ssh_client.open_sftp()
        with sftp.file(remote_file_path, 'w') as file:
            file.write(content)
        print(f"Successfully wrote content to {remote_file_path}")
    except Exception as e:
        print(f"Failed to write to {remote_file_path}: {str(e)}")

def main():
    # Local file path
    local_file_path = '/path/to/local/file.txt'
    
    # Remote server details
    hostname = 'your_hostname'
    username = 'your_username'
    password = 'your_password'
    remote_file_path = '/path/to/remote/file.txt'  # Destination file on the server

    try:
        # Read content from local file
        content = read_local_file(local_file_path)
        if content is None:
            return
        
        # Create an SSH client instance
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        
        # Connect to the SSH server using password authentication
        ssh_client.connect(hostname=hostname, username=username, password=password)
        
        # Write content to remote file
        write_to_remote_file(ssh_client, remote_file_path, content)
        
    except Exception as e:
        print(f"Error: {str(e)}")
    
    finally:
        if ssh_client:
            ssh_client.close()

if __name__ == "__main__":
    main()
