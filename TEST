import json
import boto3
from botocore.exceptions import ClientError
# from credentials_util import get_rally_details

def fetch_testcase_from_s3(s3bucket, filename):
    try:
        session = boto3.Session(profile_name="dev")

        # Getting the testcase file content
        s3_client = session.client("s3")
        
        # Getting the file
        response = s3_client.get_object(Bucket=s3bucket, Key=filename)

        # Reading the file content
        file_content = None        
        file_content = response['Body'].read().decode('utf-8')

        # Converting to JSON
        json_content = json.loads(file_content)
        return json_content
    
    except ClientError as err:
        print(err)


def get_GUI_testcases():
    
    # Getting 'testcase.json' from s3
    TCjson_s3bucket = "app-5208-dev-ue1-shared-s3-1"
    TCjson_filename = "Testing/Data/PSTesting/testcase.json"
    json_content = fetch_testcase_from_s3(TCjson_s3bucket, TCjson_filename)

    print(json_content)

    global gui_smoketestcases
    gui_smoketestcases = []

    # Filtering GUI tests from testcase.json
    for testcase in json_content["testcases"]:
        if "smoketest gui" in testcase['key'].lower():
            gui_smoketestcases.append(testcase)

    global rally_secrets
    rally_secrets = json_content["rally"]

    # rally_secrets_path = json_content["rally_secrets"]
    # rally_secrets = get_rally_details(rally_secrets_path)


def get_testdata(tc_scenario):

    # If global var 'gui_smoketestcases' not defined, fetch the testcases 
    if not "gui_smoketestcases" in globals():
        get_GUI_testcases()

    testdata = []

    # Getting all the testcases with the provided test scenario 
    global gui_smoketestcases
    for testcase in gui_smoketestcases:
        if testcase['scenario'] == tc_scenario and testcase['runflag'].lower() == 'y':
            testcase['rally'] = rally_secrets
            testdata.append(testcase)

    return testdata
