import paramiko
import os

# Server credentials and file information
hostname = "kk"
username = "n"
password = "m&9Qp"
remote_file_path = "/appl/ch/Rf.txt"  # Remote file path on the server
local_file_path = "C:/Github/Input files/Rf.txt"  # Local path where the file will be saved

# Function to download a file from the remote server
def download_file_from_unix(hostname, username, password, remote_file_path, local_file_path):
    """
    Function to download a file from a remote Unix server to the local machine using SFTP.
    """
    # Initialize SSH client
    ssh_client = paramiko.SSHClient()
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        # Connect to the remote server
        print(f"Connecting to {hostname}...")
        ssh_client.connect(hostname=hostname, username=username, password=password)
        print(f"Connected to {hostname}.")

        # Open SFTP session over the SSH connection
        sftp = ssh_client.open_sftp()

        # Check if the remote file exists
        try:
            sftp.stat(remote_file_path)  # Check if file exists on the server
            print(f"File found: {remote_file_path}. Initiating download...")
            
            # Download the remote file to the local system
            sftp.get(remote_file_path, local_file_path)
            print(f"File '{remote_file_path}' successfully downloaded to '{local_file_path}'.")

        except FileNotFoundError:
            print(f"Error: File '{remote_file_path}' not found on the server.")
        
        # Close the SFTP session
        sftp.close()

    except Exception as e:
        print(f"Error: {e}")

    finally:
        # Ensure the SSH client is closed
        if ssh_client:
            ssh_client.close()

# Main execution
try:
    download_file_from_unix(hostname, username, password, remote_file_path, local_file_path)
    print("File download completed successfully.")
except Exception as e:
    print(f"An error occurred during file download: {str(e)}")
