    iframe_index = next((idx for idx, iframe in enumerate(page.query_selector_all('iframe')) if iframe.content_frame().evaluate("document.title") == "Process Detail"), None)
    print (f"iframe_index: {iframe_index}")
    ##page.query_selector_all('iframe')[iframe_index].content_frame().get_by_role("link", name="View Log/Trace").click()

        # Directly access the iframe and perform actions
    frame = page.query_selector_all('iframe')[iframe_index].content_frame()
    
    if iframe_index is not None:
        # Access the iframe
        iframes = page.query_selector_all('iframe')
        iframe = iframes[iframe_index]
        frame = iframe.content_frame()
        
        if frame:
            try:
                # Define the selector for the 'View Log/Trace' link
                view_link_selector = "div[id='win0divPMN_DERIVED_INDEX_BTN'] span[title='Index Page'] a"
                
                # Wait for the element to be visible and interactable
                view_link = frame.wait_for_selector(view_link_selector, state="visible", timeout=10000)
                
                if view_link:
                    # Print the outer HTML for debugging
                    outer_html = view_link.evaluate("this.outerHTML")
                    print(f"View Link Outer HTML: {outer_html}")
                    
                    # Check if the element is visible
                    is_visible = view_link.evaluate("window.getComputedStyle(this).display !== 'none' && window.getComputedStyle(this).visibility !== 'hidden'")
                    print(f"Element visible: {is_visible}")
    
                    # Scroll into view
                    frame.evaluate("arguments[0].scrollIntoView(true);", view_link)
                    
                    # Click the element using JavaScript
                    frame.evaluate("""
                        var element = document.querySelector(arguments[0]);
                        if (element) {
                            element.click();
                        } else {
                            console.error('Element not found');
                        }
                    """, view_link_selector)
                    
                    print("Clicked on the 'View Log/Trace' link.")
                else:
                    print("The 'View Log/Trace' link was not found or is not visible.")
            
            except Exception as e:
                print(f"An error occurred while trying to interact with the link: {e}")
        else:
            print(f"No content frame found for iframe at index {iframe_index}.")


iframe_index: 3
View Link Outer HTML: None
An error occurred while trying to interact with the link: TypeError: Failed to execute 'getComputedStyle' on 'Window': parameter 1 is not of type 'Element'.
    at eval (eval at evaluate (:226:30), <anonymous>:1:8)
    at eval (<anonymous>)
    at UtilityScript.evaluate (<anonymous>:226:30)
    at UtilityScript.<anonymous> (<anonymous>:1:44)
.Result/tcresult.json
None
