from automation_utils import get_testdata
import win32com.client
import pytest
import psutil
import time
import pandas as pd
import openpyxl
import xml.etree.ElementTree as ET
import json
import os

# Test function
@pytest.mark.parametrize("testcase", get_testdata("test_fah_concurrent"))
def test_FAH_Concurrent(testcase):
    # Close any existing instances of UFT
    for process in psutil.process_iter():
        if process.name() == "UFT.exe":
            process.terminate()
    
    # Retrieve test data
    testdata = testcase["testdata"]
    if os.path.exists(r"Result/tcjson.xlsx"):
    # Delete the file
        os.remove(r"Result/tcjson.xlsx")
    if os.path.exists(r"Result/uftres.json"):
    # Delete the file
        os.remove(r"Result/uftres.json")
    # Convert JSON data to DataFrame
    df = pd.DataFrame([testdata])

    # Specify the path for the Excel file
    excel_file_path = r"Result/tcjson.xlsx"

    # Write DataFrame to Excel
    df.to_excel(excel_file_path, index=False)

    test_path = testdata["test_path"]

    try:
        # Create an instance of UFT
        uft = win32com.client.Dispatch("QuickTest.Application")

        # Start UFT and make the window visible
        uft.Launch()
        uft.Visible = True
        
        # Open the test
        uft.Open(test_path)

        # Create a RunResultsOptions object
        uftResultsOpt = win32com.client.Dispatch("QuickTest.RunResultsOptions")

        # Save the changes
        uft.Test.Save()

        # Run the test with parameters
        uft.Test.Run(uftResultsOpt, True)

        # Get the result path from UFT script
        resultpath = r"Result/uftres.json"

        with open(resultpath, 'r') as json_file:
        # Load JSON data from the file
            data = json.load(json_file)
        
        # Get the value of 'userid' from the JSON data
            verdict = data['Rally']['verdict']
            result = data['Rally']['notes']

      
        # Check if verdict is not "Passed"
        if verdict != "Passed":
            if result:
                # Clean up description
                #result = result.replace('"', "").replace('\n', "").replace("'", "")

                raise Exception(result)
            
        print("Script execution success!")

    except Exception as e:
        print("Error:", e)
        raise e
    
    finally:
        # Close the test
        uft.Test.Close()

        # Quit UFT
        uft.Quit()
