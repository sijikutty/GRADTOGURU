from playwright.sync_api import Page, expect
from automation_utils import get_testdata, construct_putty_credentials, save_credentials, autosys_job_run
import pytest

@pytest.mark.parametrize("testcase", get_testdata("test_Maximis_regression"))
def test_Maximis_regression(page: Page, testcase):
    testdata = testcase["testdata"]

    # Credentials
    credentials_data = construct_putty_credentials(testdata)
    cred_json_file_path = save_credentials(credentials_data)

    page.goto(testdata["autosys_url"])

    try:
        expect(page.get_by_text("AutoSys Workload Automation")).to_be_visible()
        print("Autosys Login Success!")

    except AssertionError:
        raise Exception("Autosys Login Failed.")
    
    # List of jobs to execute sequentially
    jobs_to_execute = [
        (testdata["maximis_load_job"], testdata["ODS_file_load_job"]),
        (testdata["another_job1"], testdata["another_job2"]),
        (testdata["another_job3"], testdata["another_job4"]),
        # Add more jobs as needed
    ]

    overall_success = True  # Flag to track overall success

    for job in jobs_to_execute:
        if overall_success:
            job_status = autosys_job_run(page, testdata, job[0], job[1])
            print(f"{job[0]} Status: {job_status}")

            if job_status.upper() != "SUCCESS":
                overall_success = False  # Update flag if any job fails

    if not overall_success:
        raise Exception("One or more jobs failed.")

if __name__ == "__main__":
    pytest.main()
