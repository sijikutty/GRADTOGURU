Public cfdescr
' Function to launch the Microsoft Edge browser
Function Launch()
    ' Close existing instances of Microsoft Edge and Java Platform Launcher
    SystemUtil.CloseProcessByName("msedge.exe")
    SystemUtil.CloseProcessByName("jp2launcher.exe")
    ' Run Microsoft Edge browser
    SystemUtil.Run "msedge.exe"
' Import data from Excel
    Datatable.Importsheet "C:\Github\corp_corpit_ps_egl_test_automation\UFT\PS_FAH_Input.xlsx","Chartfieldsync2","Global"

End Function

' Function to retrieve credentials from a JSON file and launch the application
Function PSCredentials()
	Errorhandling
	' Create an instance of the Environment object
	Dim env
	Set env = CreateObject("WScript.Shell").Environment("Process")
	' Retrieve the user's profile directory (home directory)
	Dim homeDir
	homeDir = env("USERPROFILE")
	Set Dom = jsonutil.Parse(homeDir & "\.secret\credentials.json")
	Set users = Dom.GetArray("psuser")
	For Each user in users
	    psusername = user.getValue("psusername")
	    pspassword = user.getValue("pspassword")
	    Exit For
	Next
	psLaunch psusername,pspassword
End Function

' Function to launch the application with the provided credentials
Function psLaunch(psusername, pspassword)
	Errorhandling
	'Wait till browser loads Completely
	Browser("iConnect - Home").Page("iConnect - Home").Sync
	' Navigate to the specified URL
	Browser("iConnect - Home").Navigate Datatable.Value("pslink")
	Browser("iConnect - Home").Page("Oracle PeopleSoft Sign-in").WebEdit("userid").Set psusername
	Browser("iConnect - Home").Page("Oracle PeopleSoft Sign-in").WebEdit("pwd").Set pspassword
	
	Browser("iConnect - Home").Page("Oracle PeopleSoft Sign-in").WebButton("To enable screen reader").Click
	'Browser("iConnect - Home").Page("Homepage").Image("NavBar").Click
	'Browser("iConnect - Home").Page("Homepage").Frame("psNavBarIFrame").WebButton("PTNB$PTNUI_NB_MENU").Click

End  Function

Function Serviceoperationsetup()
	Errorhandling
	Browser("iConnect - Home").Page("Homepage").Image("NavBar").Click
	' Navigate through various pages and perform actions
	Browser("iConnect - Home").Page("Homepage").Frame("psNavBarIFrame").WebButton("PTNB$PTNUI_NB_MENU").Click
	Browser("iConnect - Home").Page("Homepage").Frame("psNavBarIFrame").Link("PeopleTools").Click
	Browser("iConnect - Home").Page("Homepage").Frame("psNavBarIFrame").Link("Integration Broker").Click
	Browser("iConnect - Home").Page("Homepage").Frame("psNavBarIFrame").Link("Integration Setup").Click
	Browser("iConnect - Home").Page("Homepage").Frame("psNavBarIFrame").Link("Service Operation Definitions").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("TargetContent").Image("Look up Service").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("modWin_0").Link("ACCOUNT_CHARTFIELD_SYNC").Click
	
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("TargetContent").Image("Look up Service Operation").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("modWin_1").Link("ACCOUNT_CF_SYNC").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("TargetContent").WebButton("Search").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("TargetContent").Link("ACCOUNT_CF_SYNC").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("TargetContent_2").WebCheckBox("PSOPRVERDFN_ACTIVE_FLAG$0").Set "OFF"
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("TargetContent_2").WebButton("Save").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").WebButton("OK").Click
End  Function

Function RiskcodeDescrModify()
	ErrorHandling	
	'Chartfield value description modify
	Browser("iConnect - Home").Page("Service Operation Definitions").WebButton("pthdr2navbar").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("psNavBarIFrame").Image("PTNUI_MENU_ICN_1").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("psNavBarIFrame").WebMenu("Breadcrumbs").Select "Menu"
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("psNavBarIFrame").Link("Set Up Financials/Supply").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("psNavBarIFrame").Link("Common Definitions").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("psNavBarIFrame").Link("Design ChartFields").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("psNavBarIFrame").Link("Define Values").Click
	Browser("iConnect - Home").Page("Service Operation Definitions").Frame("psNavBarIFrame").Link("Define ChartField Value").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent").Link("RPT").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent_2").WebEdit("CF1_ALL_VW_SETID").Set Datatable.value("SETID")
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent_2").WebEdit("CF1_ALL_VW_CHARTFIELD1").Set Datatable.value("Riskcode")
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent_2").WebButton("Search").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent_2").WebButton("Correct History").Click
	'Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent_2").WebEdit("GL_ACCOUNT_TBL_DESCR$0").Set "Bnd_TaxEx_PY_Tes_Auto"
	'Dim cfdescr
	
	cfdescr=Datatable.value("CFDescr")
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent_2").WebEdit("CHARTFIELD1_TBL_DESCR$0").Set cfdescr
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("TargetContent_2").WebButton("Save").Click
End function

Function Fulldatapublish()
	ErrorHandling
	'Full data Publish
	Browser("iConnect - Home").Page("Define ChartField Value").WebButton("pthdr2navbar").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("psNavBarIFrame").WebButton("PTNB$PTNUI_NB_MENU").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("psNavBarIFrame").WebMenu("Breadcrumbs").Select "Menu"
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("psNavBarIFrame").Link("Enterprise Components").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("psNavBarIFrame").Link("Integration Definitions").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("psNavBarIFrame").Link("Initiate Processes").Click
	Browser("iConnect - Home").Page("Define ChartField Value").Frame("psNavBarIFrame").Link("Full Data Publish").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").Link("Show more options").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebList("PRCSRUNCNTL_RUN_CNTL_ID$op").Select "="
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebEdit("PRCSRUNCNTL_RUN_CNTL_ID").Set Datatable.value("Runcontrolid")
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebButton("Search").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebEdit("EO_PARM_FULL_REQUEST_ID$0").Set "TESTAUTO"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebEdit("EO_PARM_FULL_DESCR$0").Set "testing"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebRadioGroup("EO_PARM_FULL_PROCESS_FREQUENCY").Select "O"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebEdit("EO_PARM_FULL_IB_OPERATIONNAME$").Set "HF_CHARTFIELD1_FULL_SYNC"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebButton("Save").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebButton("Run").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("modWin_0").WebList("PRCSRQSTDLG_WRK_SERVERNAME").Select "PSUNX"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("modWin_0").WebCheckBox("PRCSRQSTDLG_WRK_SELECT_FLAG$1").Set "ON"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("modWin_0").WebButton("OK").Click
End  Function

Function Processmonitor()
	ErrorHandling	
	Dim processInstanceValue
	Dim prefixToRemove
	processInstanceValue=Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").WebElement("PRCSRQSTDLG_WRK_DESCR100").GetROProperty("innertext")
	If Not IsEmpty(processInstanceValue) Then
	    processInstanceValue = Replace(processInstanceValue, "Process Instance:", "", 1, 1)
	End If
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent").Link("Process Monitor").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent_2").WebEdit("PMN_FILTER_WRK_WS_OPRID").Set ""
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent_2").WebEdit("PMN_FILTER_WRK_PT_FILTERVALUE").Set "1"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent_2").WebList("PMN_FILTER_WRK_PT_FILTERUNIT").Select "Days"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent_2").WebEdit("PMN_DERIVED_PRCSINSTANCE").Set processInstanceValue
	startTime = Timer ' Record the start time
	Dim runStatusValue
	Dim startTime
	Do
	    ' Click on the Refresh button
	    Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent_2").WebButton("Refresh").Click
	
		runStatusValue=Browser("iConnect - Home").Page("Full Data Publish").Frame("TargetContent_2").WebElement("PMN_PRCSLIST_RUNSTATUSDESCR$0").GetROProperty("innertext")
	
	    ' Check if the value is "Success"
	    If runStatusValue = "Success" Then
	        PerformAsyncServ ' Call the PerformAsyncServ subroutine
	        Exit Do ' Exit the loop if the condition is met
	    ElseIf runStatusValue = "No Success" Or runStatusValue = "Error" Or runStatusValue = "Warning" Then
	        ' Write to UFT result that it is not success and set verdict as failure
	        Reporter.ReportEvent micFail, "Status Check", "The run status is not success (" & runStatusValue & ")"
	        Exit Do ' Exit the loop if the condition is met
	    End If
	
	    ' Wait for a short duration before the next iteration (you can adjust the delay as needed)
	    Wait(1) ' Wait for 1 second before rechecking
	
	    ' Check if 3 minutes have passed
	    If Timer - startTime >= 300 Then
	        ' Write to UFT result that it is not success and set verdict as failure
	        Reporter.ReportEvent micFail, "Status Check", "The run status did not change to success within 5 minutes"
	        Exit Do ' Exit the loop
	    End If
	Loop
End  Function

'Monitor Asynchronous service
Function PerformAsyncServ()
	ErrorHandling
	Browser("iConnect - Home").Page("Full Data Publish").WebButton("pthdr2navbar").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("psNavBarIFrame").Image("PTNUI_MENU_ICN_1").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("psNavBarIFrame").WebMenu("Breadcrumbs").Select "Menu"
	Browser("iConnect - Home").Page("Full Data Publish").Frame("psNavBarIFrame").Link("PeopleTools").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("psNavBarIFrame").Link("Integration Broker").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("psNavBarIFrame").Link("Service Operations Monitor").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("psNavBarIFrame").Link("Monitoring").Click
	Browser("iConnect - Home").Page("Full Data Publish").Frame("psNavBarIFrame").Link("Monitor Asynchronous Services").Click
	Browser("iConnect - Home").Page("Monitor Asynchronous Services").Frame("TargetContent").WebTabStrip("Monitor Overview Operation").Select "Operation Instances"
	Browser("iConnect - Home").Page("Monitor Asynchronous Services").Frame("TargetContent").WebEdit("AMM_FILTER_IB_OPERATIONNAME").Set "HF_CHARTFIELD1_FULL_SYNC"
	Browser("iConnect - Home").Page("Monitor Asynchronous Services").Frame("TargetContent").WebButton("Refresh").Click
	'Browser("iConnect - Home").Page("Monitor Asynchronous Services").Frame("TargetContent").WebElement("IB_MONITOR_AMM_STATUS$0").Click
	Dim status
        status = Browser("iConnect - Home").Page("Monitor Asynchronous Services").Frame("TargetContent").WebElement("IB_MONITOR_AMM_STATUS$0").GetROProperty("innertext")
	' Check if the status is "DONE" and perform action accordingly
	If status = "Done" Then
	Launch
	PerformOracleActions
	Else
	    ' Perform action when status is not "DONE"
	End If
End  Function


' Function to retrieve credentials from a JSON file and launch the application
Function fahCredentials()
	Errorhandling
	' Create an instance of the Environment object
	Dim env
	Set env = CreateObject("WScript.Shell").Environment("Process")
	' Retrieve the user's profile directory (home directory)
	Dim homeDir
	homeDir = env("USERPROFILE")
	Set Dom = jsonutil.Parse(homeDir & "\.secret\credentials.json")
	Set users = Dom.GetArray("fahuser")
	For Each user in users
	    fahusername = user.getValue("fahusername")
	    fahpassword = user.getValue("fahpassword")
	    Exit For
	Next
	fahLaunch fahusername,fahpassword
End Function

' Function to launch the application with the provided credentials
Function fahLaunch(fahusername, fahpassword)
	Errorhandling
	'Wait till browser loads Completely
	Browser("iConnect - Home").Page("iConnect - Home").Sync
	' Navigate to the specified URL
	Browser("iConnect - Home").Navigate Datatable.value("fahlink")
	' Set username and password
	Browser("iConnect - Home").Page("Login").WebEdit("usernameField").Set fahusername
	Browser("iConnect - Home").Page("Login").WebEdit("passwordField").Set fahpassword
	' Click on the Log In button
	Browser("iConnect - Home").Page("Login").WebButton("Log In").Click
End Function

'Subroutine
Function PerformOracleActions()
	ErrorHandling
	fahCredentials
	
	'Dim x
	'x = 0
	'do
	 '   wait 1
	 '   x = x+1
	'''loop until Browser("iConnect - Home").Page("Home").Link("Application Developer").Exist(0) or x > 300

	'if x > 300 then
	   ' WriteToUFTOne "Test failed"
	'else
	
	    	Browser("iConnect - Home").Page("Home").Link("Application Developer").Click
		Browser("iConnect - Home").Page("Home").Link("Flexfield").Click
		Browser("iConnect - Home").Page("Home").Link("Key").Click
		Browser("iConnect - Home").Page("Home").Link("Values").Click
	'end if



	' Check if a JavaDialog with the title "Security Warning" exists
	If JavaDialog("Security Warning").Exist(10) Then
	    ' If it exists, set the checkbox and click the Run button
	    JavaDialog("Security Warning").JavaCheckBox("I accept the risk and").Set "ON"
	    JavaDialog("Security Warning").JavaButton("Run").Click
	End If
	
	
	' Perform actions on Oracle forms
	OracleFormWindow("Find Key Flexfield Segment").OracleTextField("Application").OpenDialog
	OracleListOfValues("Applications").Select "General Ledger"
	OracleFormWindow("Find Key Flexfield Segment").OracleTextField("Segment").OpenDialog
	OracleListOfValues("Key Flexfield Segments").Select "Risk Participation Code"
	OracleFormWindow("Find Key Flexfield Segment").OracleTextField("Value").OpenDialog
	OracleListOfValues("OracleListOfValues").Select Datatable.value("Riskcode")
	OracleFormWindow("Find Key Flexfield Segment").OracleButton("Find").Click
	
	'Msgbox("hi" & cfdescr)
	
	'OracleFormWindow("Segment Values").OracleTabbedRegion("Values, Effective").OracleTable("Table").EnterField 1,"Description","BBB"
	If OracleFormWindow("Segment Values").OracleTabbedRegion("Values, Effective").OracleTable("Table").GetFieldValue(1, "Description") = cfdescr Then
            WriteToUFTOne "Test is success"
        Else
            WriteToUFTOne "Test failed"
        End If
	
	'AIUtil.SetContext OracleApplications("micclass:=OracleApplications")
 
	'if AIUtil("text_box", "Description").value= cfdescr then
		'Reporter.ReportEvent micPass, "Status Check", "The run status is success"
	'else
		'Reporter.ReportEvent micFail, "Status Check", "The run status is success"
	'end if
End  Function


' Function to write test results to UFT One
Function WriteToUFTOne(result)
    If result = "Test is success" Then
        Reporter.ReportEvent micPass, "Test Result", result
        verdict="Pass"
    Else
        Reporter.ReportEvent micFail, "Test Result", result
        verdict="Fail"
    End If
            WriteRallyJson "Smoketest for Chartfield Sync Process for Risk code","TC33478",verdict,result
End Function


' Function for error handling
Function ErrorHandling()
    If Err.Number <> 0 Then
    	  'Msgbox("hi"& Err.Description)
	  WScript.Echo "Error in Launch: " & Err.Description
	  WriteToUFTOne "Test failed"
	  Err.Clear
	  WScript.End
	  SystemUtil.CloseProcessByName("msedge.exe")
	  SystemUtil.CloseProcessByName("jp2launcher.exe")
	  ExitTest 
    End If
End Function

' Function to close application windows and browsers
Function CloseWindows()
      ErrorHandling
      ' Close application windows and browsers
	' Close the Java window with the title "Oracle Applications -"
	JavaWindow("Oracle Applications -").Close
	
	' Disable error reporting temporarily
	On Error Resume Next
	
	' Disable reporting temporarily
	Reporter.Filter = rfDisableAll
	
	' Approve the Oracle notification with the title "Caution"
	OracleNotification("Caution").Approve
	
	' Enable reporting
	Reporter.Filter = rfEnableAll
		
	' Reset error handling
	On Error GoTo 0
	
	' Close the Microsoft Edge browser
	Browser("iConnect - Home").Close
End Function


' Main subroutine to run the test
Sub Main()
    On Error Resume Next
    ' Perform test steps	
	Launch
	PSCredentials
	Serviceoperationsetup
	RiskcodeDescrModify
	Fulldatapublish
	Processmonitor
	'PerformAsyncServ
       CloseWindows
       ErrorHandling
End Sub

' Call the main subroutine to start the test
Main
