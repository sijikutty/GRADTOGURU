import re
from datetime import datetime, timedelta

def update_date_in_file(file_path, new_date):
    try:
        # Read the file content
        with open(file_path, 'r') as file:
            content = file.read()

        # Find the first and second dates in the content (assuming the date is in MM/DD/YYYY format)
        old_date_match = re.findall(r'\d{2}/\d{2}/\d{4}', content)

        if old_date_match:
            # The first date is the first match in the content
            old_date = old_date_match[0]
            print(f"Found old date: {old_date}")

            # Replace the first date with the new date
            updated_content = content.replace(old_date, new_date, 1)

            # Convert the new date to a datetime object
            new_date_obj = datetime.strptime(new_date, '%m/%d/%Y')

            # Calculate the second date by adding one day to the new date
            second_date_obj = new_date_obj + timedelta(days=1)
            second_date = second_date_obj.strftime('%m/%d/%Y')

            # Replace the second date in the content with the calculated date
            updated_content = updated_content.replace(old_date_match[1], second_date, 1) if len(old_date_match) > 1 else updated_content

            # Write the updated content back to the file
            with open(file_path, 'w') as file:
                file.write(updated_content)

            print(f"Date updated from {old_date} to {new_date} and the second date to {second_date} successfully.")
        else:
            print("No date found in the file.")
    
    except Exception as e:
        raise Exception(f"Failed to update date in file: {str(e)}")


# Example usage
file_path = "C:/Github/vv/Input files/maximis.out"
new_date = '11/04/2024'
update_date_in_file(file_path, new_date)
